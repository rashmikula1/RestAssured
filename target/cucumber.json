[{"line":20,"elements":[{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2346767500,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":2433636900,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":726574200,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:46.359Z","line":33,"name":"Check if user as Dietician able to retrieve all morbidity details with \"get_all_morbidity_valid\" endpoint and request body.","description":"","id":"getallmorbidities.feature;check-if-user-as-dietician-able-to-retrieve-all-morbidity-details-with-\"<datakey>\"-endpoint-and-request-body.;;2","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":136522800,"status":"passed"},"line":28,"name":"Dietician creates GET Request for all Morbidity API endpoint with fields from \"getmorbidity\" with \"get_all_morbidity_valid\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":78},{"val":"\"get_all_morbidity_valid\"","offset":98}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_creates_get_request_for_all_morbidity_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":250662500,"status":"passed"},"line":29,"name":"Dietician sends HTTPS Request for all Morbidity API \"get_all_morbidity_valid\".","match":{"arguments":[{"val":"\"get_all_morbidity_valid\"","offset":52}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_sends_https_request_for_all_morbidity_api(java.lang.String)"},"keyword":"When "},{"result":{"duration":16417700,"status":"passed"},"line":30,"name":"Dietician receives response for all Morbidity API \"getmorbidity\" with \"get_all_morbidity_valid\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":50},{"val":"\"get_all_morbidity_valid\"","offset":70}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_receives_response_for_all_morbidity_api_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetAllMorbidityModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":156986400,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":258351400,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":22198400,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:52.816Z","line":34,"name":"Check if user as Dietician able to retrieve all morbidity details with \"get_all_morbidity_invalid_endpoint\" endpoint and request body.","description":"","id":"getallmorbidities.feature;check-if-user-as-dietician-able-to-retrieve-all-morbidity-details-with-\"<datakey>\"-endpoint-and-request-body.;;3","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":102714600,"status":"passed"},"line":28,"name":"Dietician creates GET Request for all Morbidity API endpoint with fields from \"getmorbidity\" with \"get_all_morbidity_invalid_endpoint\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":78},{"val":"\"get_all_morbidity_invalid_endpoint\"","offset":98}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_creates_get_request_for_all_morbidity_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":228291000,"status":"passed"},"line":29,"name":"Dietician sends HTTPS Request for all Morbidity API \"get_all_morbidity_invalid_endpoint\".","match":{"arguments":[{"val":"\"get_all_morbidity_invalid_endpoint\"","offset":52}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_sends_https_request_for_all_morbidity_api(java.lang.String)"},"keyword":"When "},{"result":{"duration":3349800,"status":"passed"},"line":30,"name":"Dietician receives response for all Morbidity API \"getmorbidity\" with \"get_all_morbidity_invalid_endpoint\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":50},{"val":"\"get_all_morbidity_invalid_endpoint\"","offset":70}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_receives_response_for_all_morbidity_api_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetAllMorbidityModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":86189600,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":236779500,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":26131000,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:53.630Z","line":35,"name":"Check if user as Dietician able to retrieve all morbidity details with \"get_all_morbidity_invalid_token\" endpoint and request body.","description":"","id":"getallmorbidities.feature;check-if-user-as-dietician-able-to-retrieve-all-morbidity-details-with-\"<datakey>\"-endpoint-and-request-body.;;4","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":131875500,"status":"passed"},"line":28,"name":"Dietician creates GET Request for all Morbidity API endpoint with fields from \"getmorbidity\" with \"get_all_morbidity_invalid_token\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":78},{"val":"\"get_all_morbidity_invalid_token\"","offset":98}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_creates_get_request_for_all_morbidity_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":181186800,"status":"passed"},"line":29,"name":"Dietician sends HTTPS Request for all Morbidity API \"get_all_morbidity_invalid_token\".","match":{"arguments":[{"val":"\"get_all_morbidity_invalid_token\"","offset":52}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_sends_https_request_for_all_morbidity_api(java.lang.String)"},"keyword":"When "},{"result":{"duration":3532000,"status":"passed"},"line":30,"name":"Dietician receives response for all Morbidity API \"getmorbidity\" with \"get_all_morbidity_invalid_token\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":50},{"val":"\"get_all_morbidity_invalid_token\"","offset":70}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_receives_response_for_all_morbidity_api_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetAllMorbidityModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":96128100,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":251169000,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":12896900,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:54.337Z","line":36,"name":"Check if user as Dietician able to retrieve all morbidity details with \"get_all_morbidity_patient_token\" endpoint and request body.","description":"","id":"getallmorbidities.feature;check-if-user-as-dietician-able-to-retrieve-all-morbidity-details-with-\"<datakey>\"-endpoint-and-request-body.;;5","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":78028900,"status":"passed"},"line":28,"name":"Dietician creates GET Request for all Morbidity API endpoint with fields from \"getmorbidity\" with \"get_all_morbidity_patient_token\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":78},{"val":"\"get_all_morbidity_patient_token\"","offset":98}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_creates_get_request_for_all_morbidity_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":207160500,"status":"passed"},"line":29,"name":"Dietician sends HTTPS Request for all Morbidity API \"get_all_morbidity_patient_token\".","match":{"arguments":[{"val":"\"get_all_morbidity_patient_token\"","offset":52}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_sends_https_request_for_all_morbidity_api(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <403> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.GetAllMorbiditySteps.dietician_receives_response_for_all_morbidity_api_with(GetAllMorbiditySteps.java:137)\r\n\tat ✽.Dietician receives response for all Morbidity API \"getmorbidity\" with \"get_all_morbidity_patient_token\".(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/GetAllMorbidity.feature:30)\r\n","duration":39879800,"status":"failed"},"line":30,"name":"Dietician receives response for all Morbidity API \"getmorbidity\" with \"get_all_morbidity_patient_token\".","match":{"arguments":[{"val":"\"getmorbidity\"","offset":50},{"val":"\"get_all_morbidity_patient_token\"","offset":70}],"location":"stepdefinitions.GetAllMorbiditySteps.dietician_receives_response_for_all_morbidity_api_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetAllMorbidityModule"}]}],"name":"GetAllMorbidities.feature","description":"","id":"getallmorbidities.feature","keyword":"Feature","uri":"file:src/test/resources/features/GetAllMorbidity.feature","tags":[{"name":"@GetAllMorbidityModule","type":"Tag","location":{"line":19,"column":1}}]},{"line":20,"elements":[{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":64603000,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":231016500,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":16146500,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:55.076Z","line":35,"name":"Check if user able to retrieve all patients with \"get_patient_valid\" endpoint and request body.","description":"","id":"getpatient.feature;check-if-user-able-to-retrieve-all-patients-with-\"<datakey>\"-endpoint-and-request-body.;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2048064600,"status":"passed"},"line":30,"name":"User creates GET Request for the dietician/patient API endpoint with fields from \"getpatient\" with \"get_patient_valid\"","match":{"arguments":[{"val":"\"getpatient\"","offset":81},{"val":"\"get_patient_valid\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_get_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":224234800,"status":"passed"},"line":31,"name":"User sends HTTP Get patient Request \"get_patient_valid\"","match":{"arguments":[{"val":"\"get_patient_valid\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_get_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":7510400,"status":"passed"},"line":32,"name":"User receives response for Get patient \"getpatient\" with \"get_patient_valid\"","match":{"arguments":[{"val":"\"getpatient\"","offset":39},{"val":"\"get_patient_valid\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_get_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":109880900,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":231472600,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":17962800,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:57.708Z","line":36,"name":"Check if user able to retrieve all patients with \"get_patient_invalid_endpoint\" endpoint and request body.","description":"","id":"getpatient.feature;check-if-user-able-to-retrieve-all-patients-with-\"<datakey>\"-endpoint-and-request-body.;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1992900,"status":"passed"},"line":30,"name":"User creates GET Request for the dietician/patient API endpoint with fields from \"getpatient\" with \"get_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"getpatient\"","offset":81},{"val":"\"get_patient_invalid_endpoint\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_get_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":211009600,"status":"passed"},"line":31,"name":"User sends HTTP Get patient Request \"get_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"get_patient_invalid_endpoint\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_get_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":19190500,"status":"passed"},"line":32,"name":"User receives response for Get patient \"getpatient\" with \"get_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"getpatient\"","offset":39},{"val":"\"get_patient_invalid_endpoint\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_get_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":72167100,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":235892200,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":12140900,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:58.339Z","line":37,"name":"Check if user able to retrieve all patients with \"get_patient_invalid_token\" endpoint and request body.","description":"","id":"getpatient.feature;check-if-user-able-to-retrieve-all-patients-with-\"<datakey>\"-endpoint-and-request-body.;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1086300,"status":"passed"},"line":30,"name":"User creates GET Request for the dietician/patient API endpoint with fields from \"getpatient\" with \"get_patient_invalid_token\"","match":{"arguments":[{"val":"\"getpatient\"","offset":81},{"val":"\"get_patient_invalid_token\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_get_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":150705000,"status":"passed"},"line":31,"name":"User sends HTTP Get patient Request \"get_patient_invalid_token\"","match":{"arguments":[{"val":"\"get_patient_invalid_token\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_get_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":10459000,"status":"passed"},"line":32,"name":"User receives response for Get patient \"getpatient\" with \"get_patient_invalid_token\"","match":{"arguments":[{"val":"\"getpatient\"","offset":39},{"val":"\"get_patient_invalid_token\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_get_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":71680300,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":244438800,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":16334200,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:48:58.855Z","line":38,"name":"Check if user able to retrieve all patients with \"get_patient_patient_token\" endpoint and request body.","description":"","id":"getpatient.feature;check-if-user-able-to-retrieve-all-patients-with-\"<datakey>\"-endpoint-and-request-body.;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1997900,"status":"passed"},"line":30,"name":"User creates GET Request for the dietician/patient API endpoint with fields from \"getpatient\" with \"get_patient_patient_token\"","match":{"arguments":[{"val":"\"getpatient\"","offset":81},{"val":"\"get_patient_patient_token\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_get_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":169625000,"status":"passed"},"line":31,"name":"User sends HTTP Get patient Request \"get_patient_patient_token\"","match":{"arguments":[{"val":"\"get_patient_patient_token\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_get_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <403> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_get_patient_with(PatientSteps.java:548)\r\n\tat ✽.User receives response for Get patient \"getpatient\" with \"get_patient_patient_token\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Getallpatients.feature:32)\r\n","duration":9487300,"status":"failed"},"line":32,"name":"User receives response for Get patient \"getpatient\" with \"get_patient_patient_token\"","match":{"arguments":[{"val":"\"getpatient\"","offset":39},{"val":"\"get_patient_patient_token\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_get_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@GetpatientModule"}]}],"name":"Getpatient.feature","description":"","id":"getpatient.feature","keyword":"Feature","uri":"file:src/test/resources/features/Getallpatients.feature","tags":[{"name":"@GetpatientModule","type":"Tag","location":{"line":19,"column":1}}]},{"line":20,"elements":[{"start_timestamp":"2023-11-21T17:48:59.419Z","line":30,"name":"Check if the user is able to log in with valid credentials for dietician","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-dietician;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":63565400,"status":"passed"},"line":24,"name":"User creates POST Request for the dietician API endpoint using \"login_valid_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_valid_dietician\"","offset":63},{"val":"\"login\"","offset":91}],"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint_using_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":241487500,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":7363900,"status":"passed"},"line":26,"name":"User receives Status with response body \"login_valid_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_valid_dietician\"","offset":40},{"val":"\"login\"","offset":68}],"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@01PostTag"}]},{"start_timestamp":"2023-11-21T17:48:59.767Z","line":31,"name":"Check if the user is able to log in with valid credentials for dietician","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-dietician;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":59665900,"status":"passed"},"line":24,"name":"User creates POST Request for the dietician API endpoint using \"login_invalid_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalid_dietician\"","offset":63},{"val":"\"login\"","offset":93}],"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint_using_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":157931300,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":3989000,"status":"passed"},"line":26,"name":"User receives Status with response body \"login_invalid_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalid_dietician\"","offset":40},{"val":"\"login\"","offset":70}],"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@01PostTag"}]},{"start_timestamp":"2023-11-21T17:49:00.007Z","line":32,"name":"Check if the user is able to log in with valid credentials for dietician","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-dietician;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":80508300,"status":"passed"},"line":24,"name":"User creates POST Request for the dietician API endpoint using \"login_invalidPass_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalidPass_dietician\"","offset":63},{"val":"\"login\"","offset":97}],"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint_using_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":242281700,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":1581700,"status":"passed"},"line":26,"name":"User receives Status with response body \"login_invalidPass_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalidPass_dietician\"","offset":40},{"val":"\"login\"","offset":74}],"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@01PostTag"}]},{"start_timestamp":"2023-11-21T17:49:00.356Z","line":33,"name":"Check if the user is able to log in with valid credentials for dietician","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-dietician;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":73633400,"status":"passed"},"line":24,"name":"User creates POST Request for the dietician API endpoint using \"login_invalidEmail_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalidEmail_dietician\"","offset":63},{"val":"\"login\"","offset":98}],"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint_using_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":226059400,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":3605200,"status":"passed"},"line":26,"name":"User receives Status with response body \"login_invalidEmail_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_invalidEmail_dietician\"","offset":40},{"val":"\"login\"","offset":75}],"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@01PostTag"}]},{"start_timestamp":"2023-11-21T17:49:00.682Z","line":34,"name":"Check if the user is able to log in with valid credentials for dietician","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-dietician;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":53451800,"status":"passed"},"line":24,"name":"User creates POST Request for the dietician API endpoint using \"login_missingCred_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_missingCred_dietician\"","offset":63},{"val":"\"login\"","offset":97}],"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint_using_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":3085900,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":2517500,"status":"passed"},"line":26,"name":"User receives Status with response body \"login_missingCred_dietician\" and \"login\" from excel.","match":{"arguments":[{"val":"\"login_missingCred_dietician\"","offset":40},{"val":"\"login\"","offset":74}],"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_and_from_excel(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@01PostTag"}]},{"start_timestamp":"2023-11-21T17:49:00.766Z","line":37,"name":"Check if the user is able to log in with invalid API endpoint","description":"","id":"login-module;check-if-the-user-is-able-to-log-in-with-invalid-api-endpoint","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":146222500,"status":"passed"},"line":38,"name":"User creates POST Request for the dietician API endpoint","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_dietician_api_endpoint()"},"keyword":"Given "},{"result":{"duration":521900,"status":"passed"},"line":39,"name":"User sends HTTPS Request with invalid end points","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_invalid_end_points()"},"keyword":"When "},{"result":{"duration":3602000,"status":"passed"},"line":40,"name":"User receives Status with response body","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body()"},"keyword":"Then "}],"tags":[{"name":"@Loginmodule"},{"name":"@02PostTag"}]}],"name":"LOGIN MODULE","description":"","id":"login-module","keyword":"Feature","uri":"file:src/test/resources/features/Login.feature","tags":[{"name":"@Loginmodule","type":"Tag","location":{"line":19,"column":1}}]},{"line":3,"elements":[{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":52512000,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":223422900,"status":"passed"},"line":9,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10650000,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:00.935Z","line":13,"name":"Check if the user is able to log out sucessfully from dietician role","description":"","id":"get-logout;check-if-the-user-is-able-to-log-out-sucessfully-from-dietician-role","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":144317100,"status":"passed"},"line":14,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":152465400,"status":"passed"},"line":15,"name":"User sends HTTPS Request","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request()"},"keyword":"When "},{"result":{"duration":4075200,"status":"passed"},"line":16,"name":"Server should respond back with HTTP Status code 200 with message 'Logout successful'","match":{"arguments":[{"val":"200","offset":49},{"val":"'Logout successful'","offset":66}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code_with_message(java.lang.Integer,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Logout"},{"name":"@01GetTag"}]},{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":43996400,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":241681000,"status":"passed"},"line":9,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":16726800,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:01.573Z","line":19,"name":"Check if the user is able to log out with invalid token","description":"","id":"get-logout;check-if-the-user-is-able-to-log-out-with-invalid-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":143012200,"status":"passed"},"line":20,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":154745600,"status":"passed"},"line":21,"name":"User sends HTTPS Request with invalid token","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request_with_invalid_token()"},"keyword":"When "},{"result":{"duration":9366300,"status":"passed"},"line":22,"name":"Server should respond back with HTTP Status code 401","match":{"arguments":[{"val":"401","offset":49}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@Logout"},{"name":"@02GetTag"}]},{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":57542700,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":234373000,"status":"passed"},"line":9,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10458800,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:02.225Z","line":25,"name":"Check if the user is able to log out with missing token","description":"","id":"get-logout;check-if-the-user-is-able-to-log-out-with-missing-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":147563100,"status":"passed"},"line":26,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":130174900,"status":"passed"},"line":27,"name":"User sends HTTPS Request with missing token","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request_with_missing_token()"},"keyword":"When "},{"result":{"duration":10120800,"status":"passed"},"line":28,"name":"Server should respond back with HTTP Status code 401","match":{"arguments":[{"val":"401","offset":49}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@Logout"},{"name":"@03GetTag"}]},{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":47006300,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":252944100,"status":"passed"},"line":9,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11913300,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:02.844Z","line":31,"name":"Check if the user is able to log out with missing endpoint","description":"","id":"get-logout;check-if-the-user-is-able-to-log-out-with-missing-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":168542700,"status":"passed"},"line":32,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":233890300,"status":"passed"},"line":33,"name":"User sends HTTPS Request missing endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request_missing_endpoint()"},"keyword":"When "},{"result":{"duration":5919700,"status":"passed"},"line":34,"name":"Server should respond back with HTTP Status code 404","match":{"arguments":[{"val":"404","offset":49}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@Logout"},{"name":"@04GetTag"}]},{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":62600500,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":214720600,"status":"passed"},"line":9,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11510300,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:03.597Z","line":38,"name":"Check if the user is able to log out with invalid endpoint","description":"","id":"get-logout;check-if-the-user-is-able-to-log-out-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":167820700,"status":"passed"},"line":39,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":135756200,"status":"passed"},"line":40,"name":"User sends HTTPS Request invalid endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request_invalid_endpoint()"},"keyword":"When "},{"result":{"duration":6243100,"status":"passed"},"line":41,"name":"Server should respond back with HTTP Status code 404","match":{"arguments":[{"val":"404","offset":49}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@Logout"},{"name":"@05GetTag"}]}],"name":"Get Logout","description":"","id":"get-logout","keyword":"Feature","uri":"file:src/test/resources/features/Logout.feature","tags":[{"name":"@Logout","type":"Tag","location":{"line":2,"column":3}}]},{"line":20,"elements":[{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":51164200,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":220265800,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":9496200,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:04.226Z","line":33,"name":"Check if user able to create a patient with \"post_patient_valid\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":80218200,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_valid\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_valid\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":285362900,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <201> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(PatientSteps.java:168)\r\n\tat ✽.User receives response for POST patient \"patient\" with \"post_patient_valid\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Patient.feature:30)\r\n","duration":1548400,"status":"failed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_valid\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_valid\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":55233400,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":448451600,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10847200,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:04.918Z","line":34,"name":"Check if user able to create a patient with \"post_patient_duplicate\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":42467900,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_duplicate\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_duplicate\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":235144300,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":15759200,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_duplicate\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_duplicate\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":43388900,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":222466800,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":12521600,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:05.746Z","line":35,"name":"Check if user able to create a patient with \"post_patient_missing_mandatory_firstname\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":41371800,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_missing_mandatory_firstname\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_missing_mandatory_firstname\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":239412500,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":5291500,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_missing_mandatory_firstname\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_missing_mandatory_firstname\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":41338600,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":215145600,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":17121000,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:06.326Z","line":36,"name":"Check if user able to create a patient with \"post_patient_missing_mandatory_lastname\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":43726900,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_missing_mandatory_lastname\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_missing_mandatory_lastname\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":298602400,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":8048600,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_missing_mandatory_lastname\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_missing_mandatory_lastname\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":42729100,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":247178200,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":20527400,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:06.971Z","line":37,"name":"Check if user able to create a patient with \"post_patient_missing_mandatory_contactnumber\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":46632100,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_missing_mandatory_contactnumber\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_missing_mandatory_contactnumber\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":265181300,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":3618500,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_missing_mandatory_contactnumber\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_missing_mandatory_contactnumber\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":43218300,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":219212000,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":14207900,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:07.632Z","line":38,"name":"Check if user able to create a patient with \"post_patient_missing_mandatory_email\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":39256600,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_missing_mandatory_email\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_missing_mandatory_email\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":246505400,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":3811800,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_missing_mandatory_email\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_missing_mandatory_email\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":36966700,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":228461100,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":9726700,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:08.227Z","line":39,"name":"Check if user able to create a patient with \"post_patient_incorrect_format_allery\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":39081400,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_incorrect_format_allery\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_incorrect_format_allery\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":272050200,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":6380500,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_allery\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_incorrect_format_allery\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":38607100,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":220955900,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10186800,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:08.849Z","line":40,"name":"Check if user able to create a patient with \"post_patient_incorrect_format_foodcat\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;9","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":39382400,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_incorrect_format_foodcat\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_incorrect_format_foodcat\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":265491900,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":6492100,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_foodcat\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_incorrect_format_foodcat\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":27080300,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":219566200,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10960500,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:09.468Z","line":41,"name":"Check if user able to create a patient with \"post_patient_missing_mandatory_dob\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;10","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":41232300,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_missing_mandatory_dob\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_missing_mandatory_dob\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":236686000,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":5267300,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_missing_mandatory_dob\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_missing_mandatory_dob\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":19317300,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":226047800,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11448900,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:10.025Z","line":42,"name":"Check if user able to create a patient with \"post_patient_incorrect_format_dob\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;11","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":31673600,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_incorrect_format_dob\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_incorrect_format_dob\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":261762900,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <500>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(PatientSteps.java:212)\r\n\tat ✽.User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_dob\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Patient.feature:30)\r\n","duration":2094100,"status":"failed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_dob\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_incorrect_format_dob\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":32040300,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":202522500,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11366000,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:10.610Z","line":43,"name":"Check if user able to create a patient with \"post_patient_incorrect_format_email\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;12","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":36283000,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_incorrect_format_email\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_incorrect_format_email\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":250765300,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":4988200,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_email\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_incorrect_format_email\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":37401800,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":220540100,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":7216000,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:11.169Z","line":44,"name":"Check if user able to create a patient with \"post_patient_incorrect_format_contactnumber\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;13","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":41550700,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_incorrect_format_contactnumber\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_incorrect_format_contactnumber\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":236161300,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <500>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(PatientSteps.java:212)\r\n\tat ✽.User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_contactnumber\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Patient.feature:30)\r\n","duration":1046400,"status":"failed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_incorrect_format_contactnumber\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_incorrect_format_contactnumber\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":41767800,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":215253200,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":8749800,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:11.731Z","line":45,"name":"Check if user able to create a patient with \"post_patient_invalid_endpoint\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;14","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":32100700,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_invalid_endpoint\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":241839100,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(PatientSteps.java:224)\r\n\tat ✽.User receives response for POST patient \"patient\" with \"post_patient_invalid_endpoint\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Patient.feature:30)\r\n","duration":996700,"status":"failed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_invalid_endpoint\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":41219900,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":222114400,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11499600,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:12.289Z","line":46,"name":"Check if user able to create a patient with \"post_patient_invalid_token\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;15","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":48544500,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_invalid_token\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_invalid_token\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":223674700,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"duration":4954600,"status":"passed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_invalid_token\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_invalid_token\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]},{"line":22,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":49076300,"status":"passed"},"line":23,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":215970600,"status":"passed"},"line":24,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":11274200,"status":"passed"},"line":25,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:12.868Z","line":47,"name":"Check if user able to create a patient with \"post_patient_patient_token\" endpoint and request body.","description":"","id":"patient.feature;check-if-user-able-to-create-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;16","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":25907400,"status":"passed"},"line":28,"name":"User creates POST Request for the dietician/patient API endpoint with fields from \"patient\" with \"post_patient_patient_token\"","match":{"arguments":[{"val":"\"patient\"","offset":82},{"val":"\"post_patient_patient_token\"","offset":97}],"location":"stepdefinitions.PatientSteps.user_creates_post_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":251910600,"status":"passed"},"line":29,"name":"User sends HTTP POST patient Request","match":{"location":"stepdefinitions.PatientSteps.user_sends_http_post_patient_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <403> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(PatientSteps.java:249)\r\n\tat ✽.User receives response for POST patient \"patient\" with \"post_patient_patient_token\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Patient.feature:30)\r\n","duration":2425700,"status":"failed"},"line":30,"name":"User receives response for POST patient \"patient\" with \"post_patient_patient_token\"","match":{"arguments":[{"val":"\"patient\"","offset":40},{"val":"\"post_patient_patient_token\"","offset":55}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_post_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PatientModule"}]}],"name":"Patient.feature","description":"","id":"patient.feature","keyword":"Feature","uri":"file:src/test/resources/features/Patient.feature","tags":[{"name":"@PatientModule","type":"Tag","location":{"line":19,"column":1}}]},{"line":2,"elements":[{"line":7,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":43274000,"status":"passed"},"line":8,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":233289200,"status":"passed"},"line":9,"name":"User sends HTTPS Request with credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10543200,"status":"passed"},"line":10,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:13.442Z","line":13,"name":"Check if the user is able to log in with valid credentials for patient","description":"","id":"patient-login;check-if-the-user-is-able-to-log-in-with-valid-credentials-for-patient","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":28974400,"status":"passed"},"line":14,"name":"User creates POST Request for the patient API endpoint","match":{"location":"stepdefinitions.PatientLoginSteps.user_creates_post_request_for_the_patient_api_endpoint_using_and_from_excel()"},"keyword":"Given "},{"result":{"duration":222192600,"status":"passed"},"line":15,"name":"User sends HTTPS Request with valid credentials for patient on the request Body.","match":{"location":"stepdefinitions.PatientLoginSteps.user_sends_https_request_with_valid_credentials_for_patient_on_the_request_body()"},"keyword":"When "},{"result":{"duration":12713800,"status":"passed"},"line":16,"name":"User receives Status 200 with response body.","match":{"arguments":[{"val":"200","offset":21}],"location":"stepdefinitions.PatientLoginSteps.user_receives_status_with_response_body(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@PatientLogin"},{"name":"@01PostTag"}]}],"name":"Patient Login","description":"","id":"patient-login","keyword":"Feature","uri":"file:src/test/resources/features/PatientLogin.feature","tags":[{"name":"@PatientLogin","type":"Tag","location":{"line":1,"column":1}}]},{"line":20,"elements":[{"line":23,"name":"User logged in as patient","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":56441000,"status":"passed"},"line":24,"name":"User creates POST Request for the patient API endpoint","match":{"location":"stepdefinitions.PatientLoginSteps.user_creates_post_request_for_the_patient_api_endpoint_using_and_from_excel()"},"keyword":"Given "},{"result":{"duration":250160300,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials for patient on the request Body.","match":{"location":"stepdefinitions.PatientLoginSteps.user_sends_https_request_with_valid_credentials_for_patient_on_the_request_body()"},"keyword":"When "},{"result":{"duration":6053600,"status":"passed"},"line":26,"name":"User receives Status 200 with response body.","match":{"arguments":[{"val":"200","offset":21}],"location":"stepdefinitions.PatientLoginSteps.user_receives_status_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:14.024Z","line":31,"name":"Check if the user is able to log out successfully for patient role","description":"","id":"title-of-your-feature;check-if-the-user-is-able-to-log-out-successfully-for-patient-role","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":161929300,"status":"passed"},"line":32,"name":"User creates GET Request with API endpoint","match":{"location":"stepdefinitions.LogoutSteps.user_creates_get_request_for_the_dietician_or_patient_api_endpoint()"},"keyword":"Given "},{"result":{"duration":155761400,"status":"passed"},"line":33,"name":"User sends HTTPS Request","match":{"location":"stepdefinitions.LogoutSteps.user_sends_https_request()"},"keyword":"When "},{"result":{"duration":509700,"status":"passed"},"line":34,"name":"Server should respond back with HTTP Status code 200 with message 'Logout successful'","match":{"arguments":[{"val":"200","offset":49},{"val":"'Logout successful'","offset":66}],"location":"stepdefinitions.LogoutSteps.server_should_respond_back_with_http_status_code_with_message(java.lang.Integer,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@tag1"}]}],"name":"Title of your feature","description":"  I want to use this template for my feature file","id":"title-of-your-feature","keyword":"Feature","uri":"file:src/test/resources/features/PatientLogout.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":19,"column":1}}]},{"line":20,"elements":[{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":34608500,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":240472100,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":10263900,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:14.698Z","line":35,"name":"Check if user able to update a patient with \"put_patient_valid\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":361769900,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_valid\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_valid\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":319147300,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_valid\"","match":{"arguments":[{"val":"\"put_patient_valid\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":38924200,"status":"passed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_valid\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_valid\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":45181100,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":213677600,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":6397500,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:15.720Z","line":36,"name":"Check if user able to update a patient with \"put_patient_incorrect_format_allery\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":49629800,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_incorrect_format_allery\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_incorrect_format_allery\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":331270600,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_incorrect_format_allery\"","match":{"arguments":[{"val":"\"put_patient_incorrect_format_allery\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(PatientSteps.java:400)\r\n\tat ✽.User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_allery\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Putpatient.feature:32)\r\n","duration":3340400,"status":"failed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_allery\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_incorrect_format_allery\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":36607800,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":231007600,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":4516100,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:16.399Z","line":37,"name":"Check if user able to update a patient with \"put_patient_incorrect_format_foodcat\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":35816100,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_incorrect_format_foodcat\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_incorrect_format_foodcat\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":252193200,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_incorrect_format_foodcat\"","match":{"arguments":[{"val":"\"put_patient_incorrect_format_foodcat\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":5774700,"status":"passed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_foodcat\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_incorrect_format_foodcat\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":27789500,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":214680800,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":13447100,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:16.995Z","line":38,"name":"Check if user able to update a patient with \"put_patient_incorrect_format_dob\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":31116700,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_incorrect_format_dob\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_incorrect_format_dob\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":224926300,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_incorrect_format_dob\"","match":{"arguments":[{"val":"\"put_patient_incorrect_format_dob\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <500>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(PatientSteps.java:400)\r\n\tat ✽.User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_dob\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Putpatient.feature:32)\r\n","duration":2214000,"status":"failed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_dob\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_incorrect_format_dob\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":27396000,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":237599300,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":9051200,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:17.528Z","line":39,"name":"Check if user able to update a patient with \"put_patient_incorrect_format_email\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":30116400,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_incorrect_format_email\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_incorrect_format_email\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":247295700,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_incorrect_format_email\"","match":{"arguments":[{"val":"\"put_patient_incorrect_format_email\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":3782600,"status":"passed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_email\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_incorrect_format_email\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":16195000,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":227432800,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":6087700,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:18.105Z","line":40,"name":"Check if user able to update a patient with \"put_patient_incorrect_format_contactnumber\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":40177300,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_incorrect_format_contactnumber\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_incorrect_format_contactnumber\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":242658800,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_incorrect_format_contactnumber\"","match":{"arguments":[{"val":"\"put_patient_incorrect_format_contactnumber\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <500>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(PatientSteps.java:400)\r\n\tat ✽.User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_contactnumber\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Putpatient.feature:32)\r\n","duration":993700,"status":"failed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_incorrect_format_contactnumber\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_incorrect_format_contactnumber\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":30973300,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":221400200,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":6621200,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:18.657Z","line":41,"name":"Check if user able to update a patient with \"put_patient_invalid_endpoint\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":39342500,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_invalid_endpoint\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":302666900,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"put_patient_invalid_endpoint\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(PatientSteps.java:412)\r\n\tat ✽.User receives response for Put patient \"putpatient\" with \"put_patient_invalid_endpoint\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Putpatient.feature:32)\r\n","duration":4663000,"status":"failed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_invalid_endpoint\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_invalid_endpoint\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":35488800,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":213343300,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":14115800,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:19.286Z","line":42,"name":"Check if user able to update a patient with \"put_patient_invalid_token\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;9","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":26886200,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_invalid_token\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_invalid_token\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":247612500,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_invalid_token\"","match":{"arguments":[{"val":"\"put_patient_invalid_token\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"duration":7601200,"status":"passed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_invalid_token\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_invalid_token\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]},{"line":23,"name":"Dietician Logged In","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":48813900,"status":"passed"},"line":24,"name":"User creates POST Request for the login API.","match":{"location":"stepdefinitions.LoginSteps.user_creates_post_request_for_the_login_api()"},"keyword":"Given "},{"result":{"duration":209695800,"status":"passed"},"line":25,"name":"User sends HTTPS Request with valid credentials on the request Body.","match":{"location":"stepdefinitions.LoginSteps.user_sends_https_request_with_valid_credentials_on_the_request_body()"},"keyword":"When "},{"result":{"duration":6504500,"status":"passed"},"line":26,"name":"User receives Status with response body containing token information.","match":{"location":"stepdefinitions.LoginSteps.user_receives_status_with_response_body_containing_token_information()"},"keyword":"Then "}]},{"start_timestamp":"2023-11-21T17:49:19.855Z","line":43,"name":"Check if user able to update a patient with \"put_patient_patient_token\" endpoint and request body.","description":"","id":"putpatient.feature;check-if-user-able-to-update-a-patient-with-\"<datakey>\"-endpoint-and-request-body.;;10","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":43081400,"status":"passed"},"line":30,"name":"User creates Put Request for the dietician/patient API endpoint with fields from \"putpatient\" with \"put_patient_patient_token\"","match":{"arguments":[{"val":"\"putpatient\"","offset":81},{"val":"\"put_patient_patient_token\"","offset":99}],"location":"stepdefinitions.PatientSteps.user_creates_put_request_for_the_dietician_patient_api_endpoint_with_fields_from_with(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":309864200,"status":"passed"},"line":31,"name":"User sends HTTP Put patient Request \"put_patient_patient_token\"","match":{"arguments":[{"val":"\"put_patient_patient_token\"","offset":36}],"location":"stepdefinitions.PatientSteps.user_sends_http_put_patient_request(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <403> but was <200>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(PatientSteps.java:437)\r\n\tat ✽.User receives response for Put patient \"putpatient\" with \"put_patient_patient_token\"(file:///C:/Users/rashm/eclipse-workspace/Team5-Rest-Athon/Team5-Rest-Athon-main/Team5-Rest-Athon/src/test/resources/features/Putpatient.feature:32)\r\n","duration":2996400,"status":"failed"},"line":32,"name":"User receives response for Put patient \"putpatient\" with \"put_patient_patient_token\"","match":{"arguments":[{"val":"\"putpatient\"","offset":39},{"val":"\"put_patient_patient_token\"","offset":57}],"location":"stepdefinitions.PatientSteps.user_receives_response_for_put_patient_with(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@PutpatientModule"}]}],"name":"Putpatient.feature","description":"","id":"putpatient.feature","keyword":"Feature","uri":"file:src/test/resources/features/Putpatient.feature","tags":[{"name":"@PutpatientModule","type":"Tag","location":{"line":19,"column":1}}]}]